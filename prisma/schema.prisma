// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// --- BetterAuth models (do not rename, BetterAuth uses them internally) ---
model User {
  id            String             @id @default(cuid())
  email         String?            @unique
  name          String?
  image         String?
  // --- Custom fields ---
  credits       Int                @default(0)

  thumbnails    Thumbnail[]
  transactions  CreditTransaction[]
  sessions      Session[] 

  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt    DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

// --- Your app-specific models ---
model Thumbnail {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  prompt    String
  imageUrl  String
  createdAt DateTime @default(now())
}

model CreditTransaction {
  id        String           @id @default(cuid())
  user      User             @relation(fields: [userId], references: [id])
  userId    String
  amount    Int              // +ve = add, -ve = spend
  type      TransactionType
  createdAt DateTime         @default(now())
}

enum TransactionType {
  ADD
  SPEND
}


model VerificationToken {
  id        String   @id @default(cuid())
  identifier String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
}

